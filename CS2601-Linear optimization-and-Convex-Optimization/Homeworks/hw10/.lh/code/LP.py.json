{
    "sourceFile": "code/LP.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 77,
            "patches": [
                {
                    "date": 1671630408243,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1671630431947,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,10 @@\n \tThis function returns the central point x^*(t) \n \t\"\"\"\n \t#   START OF YOUR CODE\n \t\t\n-\tf = \n+\tdef f():\n+\t\t\n \n \t#\tEND OF YOUR CODE\n \n \n"
                },
                {
                    "date": 1671630444866,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,11 +15,12 @@\n \tThis function returns the central point x^*(t) \n \t\"\"\"\n \t#   START OF YOUR CODE\n \t\t\n-\tdef f():\n+\tdef f(x):\n \t\t\n \n+\n \t#\tEND OF YOUR CODE\n \n \n def barrier(c, A, b, x0, tol=1e-8, t0=1, rho=10):\n"
                },
                {
                    "date": 1671630554210,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n \t\"\"\"\n \t#   START OF YOUR CODE\n \t\t\n \tdef f(x):\n-\t\t\n+\t\tc.T@x + 1 / t * \n \n \n \t#\tEND OF YOUR CODE\n \n"
                },
                {
                    "date": 1671630645749,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,8 +16,9 @@\n \t\"\"\"\n \t#   START OF YOUR CODE\n \t\t\n \tdef f(x):\n+\t\tx_log = np.log(x)\n \t\tc.T@x + 1 / t * \n \n \n \t#\tEND OF YOUR CODE\n"
                },
                {
                    "date": 1671630696619,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,10 +16,9 @@\n \t\"\"\"\n \t#   START OF YOUR CODE\n \t\t\n \tdef f(x):\n-\t\tx_log = np.log(x)\n-\t\tc.T@x + 1 / t * \n+\t\tc.T@x + 1 / t * (- sum(np.log(x)))\n \n \n \t#\tEND OF YOUR CODE\n \n"
                },
                {
                    "date": 1671630814167,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,10 +16,12 @@\n \t\"\"\"\n \t#   START OF YOUR CODE\n \t\t\n \tdef f(x):\n-\t\tc.T@x + 1 / t * (- sum(np.log(x)))\n+\t\treturn c.T@x + 1 / t * (- sum(np.log(x)))\n \n+\tdef fp(x):\n+\t\treturn c - 1 / t * sum([1 / k for k in x])\n \n \t#\tEND OF YOUR CODE\n \n \n"
                },
                {
                    "date": 1671630821355,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,8 +21,11 @@\n \n \tdef fp(x):\n \t\treturn c - 1 / t * sum([1 / k for k in x])\n \n+\tdef fpp(x):\n+\t\t\n+\n \t#\tEND OF YOUR CODE\n \n \n def barrier(c, A, b, x0, tol=1e-8, t0=1, rho=10):\n"
                },
                {
                    "date": 1671630996201,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,10 @@\n \tdef fp(x):\n \t\treturn c - 1 / t * sum([1 / k for k in x])\n \n \tdef fpp(x):\n-\t\t\n+\t\tfor j in range(0, len(x)):\n+\t\t\t\n \n \t#\tEND OF YOUR CODE\n \n \n"
                },
                {
                    "date": 1671631008520,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,11 +22,12 @@\n \tdef fp(x):\n \t\treturn c - 1 / t * sum([1 / k for k in x])\n \n \tdef fpp(x):\n+\t\tres = 0\n \t\tfor j in range(0, len(x)):\n-\t\t\t\n \n+\n \t#\tEND OF YOUR CODE\n \n \n def barrier(c, A, b, x0, tol=1e-8, t0=1, rho=10):\n"
                },
                {
                    "date": 1671631090031,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,10 +24,10 @@\n \n \tdef fpp(x):\n \t\tres = 0\n \t\tfor j in range(0, len(x)):\n+\t\t\tg_j = np.array\n \n-\n \t#\tEND OF YOUR CODE\n \n \n def barrier(c, A, b, x0, tol=1e-8, t0=1, rho=10):\n"
                },
                {
                    "date": 1671631116633,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n \n \tdef fpp(x):\n \t\tres = 0\n \t\tfor j in range(0, len(x)):\n-\t\t\tg_j = np.array\n+\t\t\tg_j = np.zeros(len(x))\n \n \t#\tEND OF YOUR CODE\n \n \n"
                },
                {
                    "date": 1671631126445,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,8 +25,10 @@\n \tdef fpp(x):\n \t\tres = 0\n \t\tfor j in range(0, len(x)):\n \t\t\tg_j = np.zeros(len(x))\n+\t\t\tg_j[j] = -1\n+\t\t\t\n \n \t#\tEND OF YOUR CODE\n \n \n"
                },
                {
                    "date": 1671631155148,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n \t\tres = 0\n \t\tfor j in range(0, len(x)):\n \t\t\tg_j = np.zeros(len(x))\n \t\t\tg_j[j] = -1\n-\t\t\t\n+\t\t\tres += 1 / (x[j] * x[j]) *\n \n \t#\tEND OF YOUR CODE\n \n \n"
                },
                {
                    "date": 1671631172480,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n \t\tres = 0\n \t\tfor j in range(0, len(x)):\n \t\t\tg_j = np.zeros(len(x))\n \t\t\tg_j[j] = -1\n-\t\t\tres += 1 / (x[j] * x[j]) *\n+\t\t\tres += 1 / (x[j] * x[j]) * g_j @ g_j.T\n \n \t#\tEND OF YOUR CODE\n \n \n"
                },
                {
                    "date": 1671631182523,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n \t\tfor j in range(0, len(x)):\n \t\t\tg_j = np.zeros(len(x))\n \t\t\tg_j[j] = -1\n \t\t\tres += 1 / (x[j] * x[j]) * g_j @ g_j.T\n-\n+\t\treturn res\n \t#\tEND OF YOUR CODE\n \n \n def barrier(c, A, b, x0, tol=1e-8, t0=1, rho=10):\n"
                },
                {
                    "date": 1671631296682,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,8 +28,10 @@\n \t\t\tg_j = np.zeros(len(x))\n \t\t\tg_j[j] = -1\n \t\t\tres += 1 / (x[j] * x[j]) * g_j @ g_j.T\n \t\treturn res\n+\n+\tx_star = nt.newton_eq(f, fp, fpp, x0, A, b)\n \t#\tEND OF YOUR CODE\n \n \n def barrier(c, A, b, x0, tol=1e-8, t0=1, rho=10):\n"
                },
                {
                    "date": 1671631314090,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n \t\t\tg_j[j] = -1\n \t\t\tres += 1 / (x[j] * x[j]) * g_j @ g_j.T\n \t\treturn res\n \n-\tx_star = nt.newton_eq(f, fp, fpp, x0, A, b)\n+\tx_star = nt.newton_eq(f, fp, fpp, x0, A, b)[-1]\n \t#\tEND OF YOUR CODE\n \n \n def barrier(c, A, b, x0, tol=1e-8, t0=1, rho=10):\n"
                },
                {
                    "date": 1671631319163,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,8 +30,9 @@\n \t\t\tres += 1 / (x[j] * x[j]) * g_j @ g_j.T\n \t\treturn res\n \n \tx_star = nt.newton_eq(f, fp, fpp, x0, A, b)[-1]\n+\treturn x_star\n \t#\tEND OF YOUR CODE\n \n \n def barrier(c, A, b, x0, tol=1e-8, t0=1, rho=10):\n"
                },
                {
                    "date": 1671631563112,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,9 +57,10 @@\n \tx = np.array(x0)\n \tx_traces = [np.array(x0)]\n \n \t#   START OF YOUR CODE\n-\t\t\n+\tn = len(x)\n+\t\twhile()\n \tpass\n \n \t#\tEND OF YOUR CODE\n \n"
                },
                {
                    "date": 1671631603862,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,9 +58,11 @@\n \tx_traces = [np.array(x0)]\n \n \t#   START OF YOUR CODE\n \tn = len(x)\n-\t\twhile()\n+\twhile((n / t) > tol):\n+\t\t\n+\n \tpass\n \n \t#\tEND OF YOUR CODE\n \n"
                },
                {
                    "date": 1671631678337,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,9 +59,9 @@\n \n \t#   START OF YOUR CODE\n \tn = len(x)\n \twhile((n / t) > tol):\n-\t\t\n+\t\tx_k = centering_step(c, A, b, x)\n \n \tpass\n \n \t#\tEND OF YOUR CODE\n"
                },
                {
                    "date": 1671631860066,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,9 +59,9 @@\n \n \t#   START OF YOUR CODE\n \tn = len(x)\n \twhile((n / t) > tol):\n-\t\tx_k = centering_step(c, A, b, x)\n+\t\tx = centering_step(c, A, b, x)\n \n \tpass\n \n \t#\tEND OF YOUR CODE\n"
                },
                {
                    "date": 1671631892394,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,9 +60,9 @@\n \t#   START OF YOUR CODE\n \tn = len(x)\n \twhile((n / t) > tol):\n \t\tx = centering_step(c, A, b, x)\n-\n+\t\tt = rou * t\n \tpass\n \n \t#\tEND OF YOUR CODE\n \n"
                },
                {
                    "date": 1671631899559,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,9 +60,9 @@\n \t#   START OF YOUR CODE\n \tn = len(x)\n \twhile((n / t) > tol):\n \t\tx = centering_step(c, A, b, x)\n-\t\tt = rou * t\n+\t\tt = rho * t\n \tpass\n \n \t#\tEND OF YOUR CODE\n \n"
                },
                {
                    "date": 1671640184058,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,8 +60,9 @@\n \t#   START OF YOUR CODE\n \tn = len(x)\n \twhile((n / t) > tol):\n \t\tx = centering_step(c, A, b, x)\n+\t\tx_traces.append(x)\n \t\tt = rho * t\n \tpass\n \n \t#\tEND OF YOUR CODE\n"
                },
                {
                    "date": 1671641707284,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,9 +59,9 @@\n \n \t#   START OF YOUR CODE\n \tn = len(x)\n \twhile((n / t) > tol):\n-\t\tx = centering_step(c, A, b, x)\n+\t\tx = centering_step(c, A, b, x, t)\n \t\tx_traces.append(x)\n \t\tt = rho * t\n \tpass\n \n"
                },
                {
                    "date": 1671642065869,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n \t\tres = 0\n \t\tfor j in range(0, len(x)):\n \t\t\tg_j = np.zeros(len(x))\n \t\t\tg_j[j] = -1\n-\t\t\tres += 1 / (x[j] * x[j]) * g_j @ g_j.T\n+\t\t\tres += 1 / (x[j] * x[j]) * g_j.T @ g_j\n \t\treturn res\n \n \tx_star = nt.newton_eq(f, fp, fpp, x0, A, b)[-1]\n \treturn x_star\n"
                },
                {
                    "date": 1671642325048,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n \n \tdef fpp(x):\n \t\tres = 0\n \t\tfor j in range(0, len(x)):\n-\t\t\tg_j = np.zeros(len(x))\n+\t\t\tg_j = np.zeros(len(x)).reshape(1, -1)\n \t\t\tg_j[j] = -1\n \t\t\tres += 1 / (x[j] * x[j]) * g_j.T @ g_j\n \t\treturn res\n \n"
                },
                {
                    "date": 1671642358198,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,10 +24,11 @@\n \n \tdef fpp(x):\n \t\tres = 0\n \t\tfor j in range(0, len(x)):\n-\t\t\tg_j = np.zeros(len(x)).reshape(1, -1)\n+\t\t\tg_j = np.zeros(len(x))\n \t\t\tg_j[j] = -1\n+\t\t\tg_j.reshape(1,-1)\n \t\t\tres += 1 / (x[j] * x[j]) * g_j.T @ g_j\n \t\treturn res\n \n \tx_star = nt.newton_eq(f, fp, fpp, x0, A, b)[-1]\n"
                },
                {
                    "date": 1671642576632,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,8 +24,9 @@\n \n \tdef fpp(x):\n \t\tres = 0\n \t\tfor j in range(0, len(x)):\n+\t\t\tprint(j)\n \t\t\tg_j = np.zeros(len(x))\n \t\t\tg_j[j] = -1\n \t\t\tg_j.reshape(1,-1)\n \t\t\tres += 1 / (x[j] * x[j]) * g_j.T @ g_j\n"
                },
                {
                    "date": 1671642650314,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,9 +61,9 @@\n \n \t#   START OF YOUR CODE\n \tn = len(x)\n \twhile((n / t) > tol):\n-\t\tx = centering_step(c, A, b, x, t)\n+\t\tx = centering_step(c, A, b, x0, t)\n \t\tx_traces.append(x)\n \t\tt = rho * t\n \tpass\n \n"
                },
                {
                    "date": 1671642671516,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,9 +61,9 @@\n \n \t#   START OF YOUR CODE\n \tn = len(x)\n \twhile((n / t) > tol):\n-\t\tx = centering_step(c, A, b, x0, t)\n+\t\tx = centering_step(c, A, b, x, t)\n \t\tx_traces.append(x)\n \t\tt = rho * t\n \tpass\n \n"
                },
                {
                    "date": 1671642737308,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,13 +24,12 @@\n \n \tdef fpp(x):\n \t\tres = 0\n \t\tfor j in range(0, len(x)):\n-\t\t\tprint(j)\n \t\t\tg_j = np.zeros(len(x))\n \t\t\tg_j[j] = -1\n \t\t\tg_j.reshape(1,-1)\n-\t\t\tres += 1 / (x[j] * x[j]) * g_j.T @ g_j\n+\t\t\tres += 1 / (x[j] * x[j]) * (g_j.T @ g_j)\n \t\treturn res\n \n \tx_star = nt.newton_eq(f, fp, fpp, x0, A, b)[-1]\n \treturn x_star\n"
                },
                {
                    "date": 1671642743591,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,8 +27,9 @@\n \t\tfor j in range(0, len(x)):\n \t\t\tg_j = np.zeros(len(x))\n \t\t\tg_j[j] = -1\n \t\t\tg_j.reshape(1,-1)\n+\t\t\tprint(g_j)\n \t\t\tres += 1 / (x[j] * x[j]) * (g_j.T @ g_j)\n \t\treturn res\n \n \tx_star = nt.newton_eq(f, fp, fpp, x0, A, b)[-1]\n"
                },
                {
                    "date": 1671642772540,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n \t\t\tg_j = np.zeros(len(x))\n \t\t\tg_j[j] = -1\n \t\t\tg_j.reshape(1,-1)\n \t\t\tprint(g_j)\n-\t\t\tres += 1 / (x[j] * x[j]) * (g_j.T @ g_j)\n+\t\t\tres += 1.0 / (x[j] * x[j]) * (g_j.T @ g_j)\n \t\treturn res\n \n \tx_star = nt.newton_eq(f, fp, fpp, x0, A, b)[-1]\n \treturn x_star\n"
                },
                {
                    "date": 1671642867321,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,8 +25,9 @@\n \tdef fpp(x):\n \t\tres = 0\n \t\tfor j in range(0, len(x)):\n \t\t\tg_j = np.zeros(len(x))\n+\t\t\tprint(g_j)\n \t\t\tg_j[j] = -1\n \t\t\tg_j.reshape(1,-1)\n \t\t\tprint(g_j)\n \t\t\tres += 1.0 / (x[j] * x[j]) * (g_j.T @ g_j)\n"
                },
                {
                    "date": 1671642886901,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,12 +25,10 @@\n \tdef fpp(x):\n \t\tres = 0\n \t\tfor j in range(0, len(x)):\n \t\t\tg_j = np.zeros(len(x))\n-\t\t\tprint(g_j)\n \t\t\tg_j[j] = -1\n \t\t\tg_j.reshape(1,-1)\n-\t\t\tprint(g_j)\n \t\t\tres += 1.0 / (x[j] * x[j]) * (g_j.T @ g_j)\n \t\treturn res\n \n \tx_star = nt.newton_eq(f, fp, fpp, x0, A, b)[-1]\n"
                },
                {
                    "date": 1671642973769,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,8 +28,9 @@\n \t\t\tg_j = np.zeros(len(x))\n \t\t\tg_j[j] = -1\n \t\t\tg_j.reshape(1,-1)\n \t\t\tres += 1.0 / (x[j] * x[j]) * (g_j.T @ g_j)\n+\t\t\tprint(res)\n \t\treturn res\n \n \tx_star = nt.newton_eq(f, fp, fpp, x0, A, b)[-1]\n \treturn x_star\n"
                },
                {
                    "date": 1671643017226,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n \t\tfor j in range(0, len(x)):\n \t\t\tg_j = np.zeros(len(x))\n \t\t\tg_j[j] = -1\n \t\t\tg_j.reshape(1,-1)\n-\t\t\tres += 1.0 / (x[j] * x[j]) * (g_j.T @ g_j)\n+\t\t\tres += 1.0 / (x[j] * x[j]) @ (g_j.T @ g_j)\n \t\t\tprint(res)\n \t\treturn res\n \n \tx_star = nt.newton_eq(f, fp, fpp, x0, A, b)[-1]\n"
                },
                {
                    "date": 1671643063342,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,10 +27,13 @@\n \t\tfor j in range(0, len(x)):\n \t\t\tg_j = np.zeros(len(x))\n \t\t\tg_j[j] = -1\n \t\t\tg_j.reshape(1,-1)\n-\t\t\tres += 1.0 / (x[j] * x[j]) @ (g_j.T @ g_j)\n-\t\t\tprint(res)\n+\t\t\tp = 1.0 / (x[j] * x[j])\n+\t\t\tg = (g_j.T @ g_j)\n+\t\t\tprint(p)\n+\t\t\tprint(g)\n+\n \t\treturn res\n \n \tx_star = nt.newton_eq(f, fp, fpp, x0, A, b)[-1]\n \treturn x_star\n"
                },
                {
                    "date": 1671643114013,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,8 @@\n \t\t\tg_j[j] = -1\n \t\t\tg_j.reshape(1,-1)\n \t\t\tp = 1.0 / (x[j] * x[j])\n \t\t\tg = (g_j.T @ g_j)\n-\t\t\tprint(p)\n \t\t\tprint(g)\n \n \t\treturn res\n \n"
                },
                {
                    "date": 1671643133332,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,8 +27,9 @@\n \t\tfor j in range(0, len(x)):\n \t\t\tg_j = np.zeros(len(x))\n \t\t\tg_j[j] = -1\n \t\t\tg_j.reshape(1,-1)\n+\t\t\tprint(g_j)\n \t\t\tp = 1.0 / (x[j] * x[j])\n \t\t\tg = (g_j.T @ g_j)\n \t\t\tprint(g)\n \n"
                },
                {
                    "date": 1671643180719,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,9 @@\n \t\t\tg_j.reshape(1,-1)\n \t\t\tprint(g_j)\n \t\t\tp = 1.0 / (x[j] * x[j])\n \t\t\tg = (g_j.T @ g_j)\n-\t\t\tprint(g)\n+\t\t\tprint(g_j)\n \n \t\treturn res\n \n \tx_star = nt.newton_eq(f, fp, fpp, x0, A, b)[-1]\n"
                },
                {
                    "date": 1671643192308,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,9 @@\n \t\t\tg_j.reshape(1,-1)\n \t\t\tprint(g_j)\n \t\t\tp = 1.0 / (x[j] * x[j])\n \t\t\tg = (g_j.T @ g_j)\n-\t\t\tprint(g_j)\n+\t\n \n \t\treturn res\n \n \tx_star = nt.newton_eq(f, fp, fpp, x0, A, b)[-1]\n"
                },
                {
                    "date": 1671643258543,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,8 +24,9 @@\n \n \tdef fpp(x):\n \t\tres = 0\n \t\tfor j in range(0, len(x)):\n+\t\t\tprint(len(x))\n \t\t\tg_j = np.zeros(len(x))\n \t\t\tg_j[j] = -1\n \t\t\tg_j.reshape(1,-1)\n \t\t\tprint(g_j)\n"
                },
                {
                    "date": 1671643271039,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,8 +26,9 @@\n \t\tres = 0\n \t\tfor j in range(0, len(x)):\n \t\t\tprint(len(x))\n \t\t\tg_j = np.zeros(len(x))\n+\t\t\tprint(g_j)\n \t\t\tg_j[j] = -1\n \t\t\tg_j.reshape(1,-1)\n \t\t\tprint(g_j)\n \t\t\tp = 1.0 / (x[j] * x[j])\n"
                },
                {
                    "date": 1671643293248,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,14 +24,11 @@\n \n \tdef fpp(x):\n \t\tres = 0\n \t\tfor j in range(0, len(x)):\n-\t\t\tprint(len(x))\n \t\t\tg_j = np.zeros(len(x))\n-\t\t\tprint(g_j)\n \t\t\tg_j[j] = -1\n \t\t\tg_j.reshape(1,-1)\n-\t\t\tprint(g_j)\n \t\t\tp = 1.0 / (x[j] * x[j])\n \t\t\tg = (g_j.T @ g_j)\n \t\n \n"
                },
                {
                    "date": 1671643304679,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,8 +29,9 @@\n \t\t\tg_j[j] = -1\n \t\t\tg_j.reshape(1,-1)\n \t\t\tp = 1.0 / (x[j] * x[j])\n \t\t\tg = (g_j.T @ g_j)\n+\t\t\tres += p * g\n \t\n \n \t\treturn res\n \n"
                },
                {
                    "date": 1671643325066,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n \t\t\tg_j[j] = -1\n \t\t\tg_j.reshape(1,-1)\n \t\t\tp = 1.0 / (x[j] * x[j])\n \t\t\tg = (g_j.T @ g_j)\n-\t\t\tres += p * g\n+\t\t\tprint(g)\n \t\n \n \t\treturn res\n \n"
                },
                {
                    "date": 1671643347160,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,8 +27,9 @@\n \t\tfor j in range(0, len(x)):\n \t\t\tg_j = np.zeros(len(x))\n \t\t\tg_j[j] = -1\n \t\t\tg_j.reshape(1,-1)\n+\t\t\tprint(g.shape)\n \t\t\tp = 1.0 / (x[j] * x[j])\n \t\t\tg = (g_j.T @ g_j)\n \t\t\tprint(g)\n \t\n"
                },
                {
                    "date": 1671643355279,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n \t\tfor j in range(0, len(x)):\n \t\t\tg_j = np.zeros(len(x))\n \t\t\tg_j[j] = -1\n \t\t\tg_j.reshape(1,-1)\n-\t\t\tprint(g.shape)\n+\t\t\tprint(g_j.shape)\n \t\t\tp = 1.0 / (x[j] * x[j])\n \t\t\tg = (g_j.T @ g_j)\n \t\t\tprint(g)\n \t\n"
                },
                {
                    "date": 1671643375064,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n \t\tres = 0\n \t\tfor j in range(0, len(x)):\n \t\t\tg_j = np.zeros(len(x))\n \t\t\tg_j[j] = -1\n-\t\t\tg_j.reshape(1,-1)\n+\t\t\tg_j.reshape(1,4)\n \t\t\tprint(g_j.shape)\n \t\t\tp = 1.0 / (x[j] * x[j])\n \t\t\tg = (g_j.T @ g_j)\n \t\t\tprint(g)\n"
                },
                {
                    "date": 1671643415541,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n \t\tres = 0\n \t\tfor j in range(0, len(x)):\n \t\t\tg_j = np.zeros(len(x))\n \t\t\tg_j[j] = -1\n-\t\t\tg_j.reshape(1,4)\n+\t\t\tg_j.reshape(-1 ,1)\n \t\t\tprint(g_j.shape)\n \t\t\tp = 1.0 / (x[j] * x[j])\n \t\t\tg = (g_j.T @ g_j)\n \t\t\tprint(g)\n"
                },
                {
                    "date": 1671643447339,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n \t\tres = 0\n \t\tfor j in range(0, len(x)):\n \t\t\tg_j = np.zeros(len(x))\n \t\t\tg_j[j] = -1\n-\t\t\tg_j.reshape(-1 ,1)\n+\t\t\tg_j.reshape(1,4)\n \t\t\tprint(g_j.shape)\n \t\t\tp = 1.0 / (x[j] * x[j])\n \t\t\tg = (g_j.T @ g_j)\n \t\t\tprint(g)\n"
                },
                {
                    "date": 1671643461896,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n \t\tres = 0\n \t\tfor j in range(0, len(x)):\n \t\t\tg_j = np.zeros(len(x))\n \t\t\tg_j[j] = -1\n-\t\t\tg_j.reshape(1,4)\n+\t\t\tg_j.reshape(-1, 1)\n \t\t\tprint(g_j.shape)\n \t\t\tp = 1.0 / (x[j] * x[j])\n \t\t\tg = (g_j.T @ g_j)\n \t\t\tprint(g)\n"
                },
                {
                    "date": 1671643467993,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n \t\tfor j in range(0, len(x)):\n \t\t\tg_j = np.zeros(len(x))\n \t\t\tg_j[j] = -1\n \t\t\tg_j.reshape(-1, 1)\n-\t\t\tprint(g_j.shape)\n+\t\t\tprint(g_j)\n \t\t\tp = 1.0 / (x[j] * x[j])\n \t\t\tg = (g_j.T @ g_j)\n \t\t\tprint(g)\n \t\n"
                },
                {
                    "date": 1671643504868,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n \n \tdef fpp(x):\n \t\tres = 0\n \t\tfor j in range(0, len(x)):\n-\t\t\tg_j = np.zeros(len(x))\n+\t\t\tg_j = np.zeros(4)\n \t\t\tg_j[j] = -1\n \t\t\tg_j.reshape(-1, 1)\n \t\t\tprint(g_j)\n \t\t\tp = 1.0 / (x[j] * x[j])\n"
                },
                {
                    "date": 1671643539423,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n \t\t\tg_j[j] = -1\n \t\t\tg_j.reshape(-1, 1)\n \t\t\tprint(g_j)\n \t\t\tp = 1.0 / (x[j] * x[j])\n-\t\t\tg = (g_j.T @ g_j)\n+\t\t\tg = (g_j@ g_j.T)\n \t\t\tprint(g)\n \t\n \n \t\treturn res\n"
                },
                {
                    "date": 1671643587926,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n \t\tfor j in range(0, len(x)):\n \t\t\tg_j = np.zeros(4)\n \t\t\tg_j[j] = -1\n \t\t\tg_j.reshape(-1, 1)\n-\t\t\tprint(g_j)\n+\t\t\tprint(g_j.T)\n \t\t\tp = 1.0 / (x[j] * x[j])\n \t\t\tg = (g_j@ g_j.T)\n \t\t\tprint(g)\n \t\n"
                },
                {
                    "date": 1671643661160,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,15 +24,19 @@\n \n \tdef fpp(x):\n \t\tres = 0\n \t\tfor j in range(0, len(x)):\n-\t\t\tg_j = np.zeros(4)\n-\t\t\tg_j[j] = -1\n-\t\t\tg_j.reshape(-1, 1)\n-\t\t\tprint(g_j.T)\n+\t\t\tx = np.zeros(10)\n+\t\t\tx[2] = 1\n+\t\t\ty = np.zeros(10)\n+\t\t\ty[2] = 1\n+\n+\t\t\tx = x.reshape(-1, 1)\n+\t\t\ty = y.reshape(1, -1)\n+\t\t\tprint(x @ y)\n \t\t\tp = 1.0 / (x[j] * x[j])\n-\t\t\tg = (g_j@ g_j.T)\n-\t\t\tprint(g)\n+\t\t\t# g = (g_j@ g_j.T)\n+\t\t\t# print(g)\n \t\n \n \t\treturn res\n \n"
                },
                {
                    "date": 1671643694485,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n \n \tdef fpp(x):\n \t\tres = 0\n \t\tfor j in range(0, len(x)):\n-\t\t\tx = np.zeros(10)\n+\t\t\tg = np.zeros(10)\n \t\t\tx[2] = 1\n \t\t\ty = np.zeros(10)\n \t\t\ty[2] = 1\n \n"
                },
                {
                    "date": 1671643710035,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,12 +24,10 @@\n \n \tdef fpp(x):\n \t\tres = 0\n \t\tfor j in range(0, len(x)):\n-\t\t\tg = np.zeros(10)\n-\t\t\tx[2] = 1\n-\t\t\ty = np.zeros(10)\n-\t\t\ty[2] = 1\n+\t\t\tg1 = np.zeros(len(x))\n+\t\t\t\n \n \t\t\tx = x.reshape(-1, 1)\n \t\t\ty = y.reshape(1, -1)\n \t\t\tprint(x @ y)\n"
                },
                {
                    "date": 1671643748884,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,10 +24,11 @@\n \n \tdef fpp(x):\n \t\tres = 0\n \t\tfor j in range(0, len(x)):\n-\t\t\tg1 = np.zeros(len(x))\n-\t\t\t\n+\t\t\tg = np.zeros(len(x))\n+\t\t\tg1 = g.reshape(-1, 1)\n+\t\t\tg[j] = -1\n \n \t\t\tx = x.reshape(-1, 1)\n \t\t\ty = y.reshape(1, -1)\n \t\t\tprint(x @ y)\n"
                },
                {
                    "date": 1671643757857,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,8 +26,9 @@\n \t\tres = 0\n \t\tfor j in range(0, len(x)):\n \t\t\tg = np.zeros(len(x))\n \t\t\tg1 = g.reshape(-1, 1)\n+\t\t\tg2 = g.reshape(1, -1)\n \t\t\tg[j] = -1\n \n \t\t\tx = x.reshape(-1, 1)\n \t\t\ty = y.reshape(1, -1)\n"
                },
                {
                    "date": 1671643764583,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,10 +27,9 @@\n \t\tfor j in range(0, len(x)):\n \t\t\tg = np.zeros(len(x))\n \t\t\tg1 = g.reshape(-1, 1)\n \t\t\tg2 = g.reshape(1, -1)\n-\t\t\tg[j] = -1\n-\n+\t\t\tg1[j] = -1\n \t\t\tx = x.reshape(-1, 1)\n \t\t\ty = y.reshape(1, -1)\n \t\t\tprint(x @ y)\n \t\t\tp = 1.0 / (x[j] * x[j])\n"
                },
                {
                    "date": 1671643794823,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,12 +24,13 @@\n \n \tdef fpp(x):\n \t\tres = 0\n \t\tfor j in range(0, len(x)):\n-\t\t\tg = np.zeros(len(x))\n-\t\t\tg1 = g.reshape(-1, 1)\n-\t\t\tg2 = g.reshape(1, -1)\n+\t\t\tg1 = np.zeros(len(x))\n+\t\t\tg2 = np.zeros(len(x))\n \t\t\tg1[j] = -1\n+\t\t\tg2[j] = -1\n+\t\t\tg1[j] = -1\n \t\t\tx = x.reshape(-1, 1)\n \t\t\ty = y.reshape(1, -1)\n \t\t\tprint(x @ y)\n \t\t\tp = 1.0 / (x[j] * x[j])\n"
                },
                {
                    "date": 1671643806056,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n \t\t\tg1 = np.zeros(len(x))\n \t\t\tg2 = np.zeros(len(x))\n \t\t\tg1[j] = -1\n \t\t\tg2[j] = -1\n-\t\t\tg1[j] = -1\n+\t\t\tg1 = g1.reshape(-1, 1)\n \t\t\tx = x.reshape(-1, 1)\n \t\t\ty = y.reshape(1, -1)\n \t\t\tprint(x @ y)\n \t\t\tp = 1.0 / (x[j] * x[j])\n"
                },
                {
                    "date": 1671643813601,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,8 +29,9 @@\n \t\t\tg2 = np.zeros(len(x))\n \t\t\tg1[j] = -1\n \t\t\tg2[j] = -1\n \t\t\tg1 = g1.reshape(-1, 1)\n+\t\t\tg2 = g2.reshape(1, -1)\n \t\t\tx = x.reshape(-1, 1)\n \t\t\ty = y.reshape(1, -1)\n \t\t\tprint(x @ y)\n \t\t\tp = 1.0 / (x[j] * x[j])\n"
                },
                {
                    "date": 1671643822441,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,11 +30,10 @@\n \t\t\tg1[j] = -1\n \t\t\tg2[j] = -1\n \t\t\tg1 = g1.reshape(-1, 1)\n \t\t\tg2 = g2.reshape(1, -1)\n-\t\t\tx = x.reshape(-1, 1)\n-\t\t\ty = y.reshape(1, -1)\n-\t\t\tprint(x @ y)\n+\t\n+\t\t\tprint(g1 @ g2)\n \t\t\tp = 1.0 / (x[j] * x[j])\n \t\t\t# g = (g_j@ g_j.T)\n \t\t\t# print(g)\n \t\n"
                },
                {
                    "date": 1671643863006,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,13 +31,9 @@\n \t\t\tg2[j] = -1\n \t\t\tg1 = g1.reshape(-1, 1)\n \t\t\tg2 = g2.reshape(1, -1)\n \t\n-\t\t\tprint(g1 @ g2)\n-\t\t\tp = 1.0 / (x[j] * x[j])\n-\t\t\t# g = (g_j@ g_j.T)\n-\t\t\t# print(g)\n-\t\n+\t\t\tres += 1.0 / (x[j] * x[j]) * g1@g2\n \n \t\treturn res\n \n \tx_star = nt.newton_eq(f, fp, fpp, x0, A, b)[-1]\n"
                },
                {
                    "date": 1671643892372,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,9 @@\n \t\t\tg1 = g1.reshape(-1, 1)\n \t\t\tg2 = g2.reshape(1, -1)\n \t\n \t\t\tres += 1.0 / (x[j] * x[j]) * g1@g2\n-\n+\t\tprint(res)\n \t\treturn res\n \n \tx_star = nt.newton_eq(f, fp, fpp, x0, A, b)[-1]\n \treturn x_star\n"
                },
                {
                    "date": 1671643914706,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,8 @@\n \t\t\tg1 = g1.reshape(-1, 1)\n \t\t\tg2 = g2.reshape(1, -1)\n \t\n \t\t\tres += 1.0 / (x[j] * x[j]) * g1@g2\n-\t\tprint(res)\n \t\treturn res\n \n \tx_star = nt.newton_eq(f, fp, fpp, x0, A, b)[-1]\n \treturn x_star\n"
                },
                {
                    "date": 1671644233416,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,8 +19,14 @@\n \tdef f(x):\n \t\treturn c.T@x + 1 / t * (- sum(np.log(x)))\n \n \tdef fp(x):\n+\t\tres = 0\n+\t\tfor j in range(0, len(x)):\n+\t\t\tg = np.zeros(len(x))\n+\t\t\tg[j] = 1\n+\t\t\tg = g.reshape(-1, 1)\n+\t\t\t\n \t\treturn c - 1 / t * sum([1 / k for k in x])\n \n \tdef fpp(x):\n \t\tres = 0\n"
                },
                {
                    "date": 1671644284715,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,10 +24,10 @@\n \t\tfor j in range(0, len(x)):\n \t\t\tg = np.zeros(len(x))\n \t\t\tg[j] = 1\n \t\t\tg = g.reshape(-1, 1)\n-\t\t\t\n-\t\treturn c - 1 / t * sum([1 / k for k in x])\n+\t\t\tres += (-1 / t) * (1 / x[j]) * g\n+\t\treturn c  + res\n \n \tdef fpp(x):\n \t\tres = 0\n \t\tfor j in range(0, len(x)):\n"
                },
                {
                    "date": 1671644298609,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,8 +25,9 @@\n \t\t\tg = np.zeros(len(x))\n \t\t\tg[j] = 1\n \t\t\tg = g.reshape(-1, 1)\n \t\t\tres += (-1 / t) * (1 / x[j]) * g\n+\t\tprint(c + res)\n \t\treturn c  + res\n \n \tdef fpp(x):\n \t\tres = 0\n"
                },
                {
                    "date": 1671644390122,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,8 @@\n \t\t\tg = np.zeros(len(x))\n \t\t\tg[j] = 1\n \t\t\tg = g.reshape(-1, 1)\n \t\t\tres += (-1 / t) * (1 / x[j]) * g\n-\t\tprint(c + res)\n \t\treturn c  + res\n \n \tdef fpp(x):\n \t\tres = 0\n"
                },
                {
                    "date": 1671644746801,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,8 +16,11 @@\n \t\"\"\"\n \t#   START OF YOUR CODE\n \t\t\n \tdef f(x):\n+\t\tfor x_ in x:\n+\t\t\tif(x_ <= 0):\n+\t\t\t\treturn np.PINF\n \t\treturn c.T@x + 1 / t * (- sum(np.log(x)))\n \n \tdef fp(x):\n \t\tres = 0\n"
                }
            ],
            "date": 1671630408243,
            "name": "Commit-0",
            "content": "import newton as nt\nimport numpy as np\n\ndef centering_step(c, A, b, x0, t):\n\t\"\"\"\n\tc, A, b: parameters in LP\n\n\t\tmin   c^T x\n\t\ts.t.  Ax = b\n\t\t      x >= 0\n\n\tx0: feasible initial point for constrained Newton's method\n\tt:  penalty parameter in barrier method\n\n\tThis function returns the central point x^*(t) \n\t\"\"\"\n\t#   START OF YOUR CODE\n\t\t\n\tf = \n\n\t#\tEND OF YOUR CODE\n\n\ndef barrier(c, A, b, x0, tol=1e-8, t0=1, rho=10):\n\t\"\"\"\n\tc, A, b: parameters in LP\n\t\n\t\tmin   c^T x\n\t\ts.t.  Ax = b\n\t\t      x >= 0\n\t\t     \n\tx0:  feasible initial point for the barrier method\n\ttol: tolerance parameter for the suboptimality gap. The algorithm stops when\n\n\t         f(x) - f^* <= tol\n\n\tt0:  initial penalty parameter in barrier method\n\trho: factor by which the penalty parameter is increased in each centering step\n\n\tThis function should return a list of the iterates\n\t\"\"\"\t\n\tt = t0\n\tx = np.array(x0)\n\tx_traces = [np.array(x0)]\n\n\t#   START OF YOUR CODE\n\t\t\n\tpass\n\n\t#\tEND OF YOUR CODE\n\n\treturn x_traces"
        }
    ]
}